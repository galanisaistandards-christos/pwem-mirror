name: Pages ¬∑ Mirror + Memory

on:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/pages.yml"
      - "memory/**"
      - "site/**"
      - "package.json"
      - "pnpm-lock.yaml"
      - "yarn.lock"
      - "package-lock.json"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "github-pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Stamp attempt
        id: stamp
        shell: bash
        run: |
          set -e
          ts="$(date '+%Y-%m-%d %H:%M:%S %Z')"
          raw="$(git log -1 --pretty=%B | tr -d '\r')"
          if echo "$raw" | grep -q '^\[#\([0-9]\+\)'; then
            n="$(echo "$raw" | sed -n 's/^\[\#\([0-9]\+\).*/\1/p' | head -n1)"
          else
            n="N/A"
          fi
          echo "timestamp=$ts" >> "$GITHUB_OUTPUT"
          echo "attempt=$n" >> "$GITHUB_OUTPUT"
          echo "[${ts}] attempt #${n} üçë ‚Äî build start"

      - name: Prepare site/
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p site
          # ensure .nojekyll at artifact root
          echo > site/.nojekyll

      - name: Copy memory ‚Üí site/memory
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p site/memory
          if [ -d memory ]; then
            rsync -av --delete memory/ site/memory/ || cp -a memory/. site/memory/
          fi
          echo "‚Äî‚Äî tree check (chron/2025/01) ‚Äî‚Äî"
          (ls -la site/memory/chron/2025/01 || true)

      - name: Upload artifact (site/)
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deploy stamp
        run: |
          ts="$(date '+%Y-%m-%d %H:%M:%S %Z')"
          echo "[${ts}] deploy done ‚úÖ"

    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}

  smoke:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Smoke-check endpoints
        env:
          BASE: ${{ needs.deploy.outputs.page_url }}
        shell: bash
        run: |
          set -e
          ts() { date '+%Y-%m-%d %H:%M:%S %Z'; }
          echo "[$(ts)] smoke-check start ü´ß"

          urls=(
            "${BASE}memory/ping.txt"
            "${BASE}memory/heartbeat.json"
            "${BASE}memory/status.json"
            "${BASE}memory/chron/2025/01/index.html"
          )

          # small warmup loop for propagation (max ~2 min)
          for i in {1..24}; do
            ok=1
            for u in "${urls[@]}"; do
              code=$(curl -s -o /dev/null -w "%{http_code}" "$u" || true)
              if [ "$code" != "200" ]; then ok=0; fi
            done
            [ $ok -eq 1 ] && break
            sleep 5
          done

          fail=0
          for u in "${urls[@]}"; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$u" || true)
            if [ "$code" = "200" ]; then
              echo "‚úÖ $u"
            else
              echo "‚ùå $u (HTTP $code)"
              fail=1
            fi
          done
          echo "[$(ts)] smoke-check end"
          exit $fail
