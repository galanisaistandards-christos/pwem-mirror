name: Deploy static site to Pages

on:
  push:
    branches: [main]
    paths:
      - 'memory/**'
      - 'assets/**'
      - 'index.html'
      - '.github/workflows/pages.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Φτιάχνουμε ρητά έναν φάκελο site/ με ό,τι θέλουμε να δημοσιευτεί
      - name: Build site directory (memory + assets)
        shell: bash
        run: |
          set -euo pipefail
          rm -rf site
          mkdir -p site
          rsync -a --delete memory/ site/memory/
          rsync -a --delete assets/ site/assets/ || true
          [ -f index.html ] && cp -a index.html site/ || true
          touch site/.nojekyll
          echo "Site preview:"
          find site -type f | sort | head -60

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site
          if-no-files-found: error

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # Smoke-check μετά το deploy (περιμένει μέχρι να βγει live)
      - name: Smoke-check (ping, heartbeat, status, month index)
        env:
          BASE_URL: ${{ steps.deployment.outputs.page_url }}
        shell: bash
        run: |
          set -euo pipefail

          poll() {
            local url="$1"
            local expect="${2:-}"
            for i in $(seq 1 40); do
              code=$(curl -s -o /dev/null -w "%{http_code}" "$url" || true)
              body=""
              if [[ -n "$expect" ]]; then body=$(curl -s "$url" || true); fi
              if [[ "$code" == "200" ]] && { [[ -z "$expect" ]] || [[ "$body" == *"$expect"* ]]; }; then
                echo "✅ $url"
                return 0
              fi
              echo "⏳ try $i: $code …"; sleep 3
            done
            echo "❌ FAIL $url"; return 1
          }

          base="${BASE_URL%/}"
          echo "🍑 Smoke @ $(date -u +"%Y-%m-%d %H:%M:%S UTC") — $base"

          poll "$base/memory/ping.txt" "ok"
          poll "$base/memory/heartbeat.json" "\"ok\": true"
          poll "$base/memory/status.json" "\"ok\": true"
          # Κρίσιμο: να υπάρχει και ο μήνας
          poll "$base/memory/chron/2025/01/index.html" "<html"
