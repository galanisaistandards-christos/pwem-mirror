name: Deploy static site to Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Configure Pages
        uses: actions/configure-pages@v5

      # Ανεβάζουμε ΟΛΟ το repo ως artifact (για να σερβάρει και /memory/**)
      - name: Upload site artifact (entire repo)
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # -----------------------------
      # 🔥 Smoke-check μετά το deploy
      # -----------------------------
      - name: Smoke-check (multi URL: ping(s) + index)  🍑🍆
        shell: bash
        env:
          BASE_URL: ${{ steps.deployment.outputs.page_url }}
        run: |
          set -euo pipefail

          # Εκτυπώνουμε “σκυτάλη”: attempt, ώρα, emojis
          attempt="#06"   # <== ΑΥΞΑΝΕΙΣ σε κάθε αλλαγή
          when="$(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          echo "⏱️  Smoke attempt ${attempt} @ ${when} — 6 🍑 6 🍆 💖"

          # Μικρό helper: GET μόνο status code
          http_code='
            curl -s -o /dev/null -w "%{http_code}"
          '

          # poll με retries (40 x 3s ~ 2 λεπτά)
          poll() {
            local url="$1"
            local expect="${2:-}"   # προαιρετικό body match
            for i in $(seq 1 40); do
              code=$(${http_code} "$url")
              body=""
              if [[ -n "$expect" ]]; then
                body=$(curl -s "$url" || true)
              fi

              if [[ "$code" == "200" ]]; then
                if [[ -z "$expect" || "$body" == *"$expect"* ]]; then
                  echo "✅ OK: $url"
                  return 0
                fi
              fi

              echo "🧪 Attempt $i: code=$code (need 200) ${expect:+and body contains '$expect'} — retrying..."
              sleep 3
            done
            echo "❌ FAIL: $url"
            return 1
          }

          # Βάση (σίγουρα με trailing slash)
          base="${BASE_URL%/}/"

          # Λίστα ελέγχων: rel path | expected body (προερ.)
          checks=(
            "memory/ping.txt|ok"
            "memory/chron/2025/ping.txt|ok"
            "|<!DOCTYPE html"                        # root index.html (κενό rel = base)
            "memory/chron/2025/08/index.html|<title>PWEM - 2025</title>"
          )

          failed=0
          for item in "${checks[@]}"; do
            rel="${item%%|*}"
            exp="${item#*|}"
            # φτιάχνουμε URL (προσοχή στα //)
            if [[ -z "$rel" ]]; then
              url="$base"
            else
              url="$base$rel"
            fi

            if ! poll "$url" "$exp"; then
              failed=1
            fi
          done

          if [[ "$failed" -ne 0 ]]; then
            echo "🧨 Smoke-check failed"
            exit 1
          else
            echo "🎉 Smoke-check passed — ${attempt} — 6 🍑 6 🍆"
          fi
